PipelineSecrets: {}
auth:
  keycloak:
    keycloak:
      existingSecret: auth-keycloak
      existingSecretKey: adminPassword
      persistence:
        dbHost: jx-postgresql-ha-pgpool.jx-staging.svc.cluster.local
        existingSecret: auth-postgres
        existingSecretPasswordKey: adminPassword
        existingSecretUsernameKey: adminUsername
      username: vault:staging/auth/postgres:adminUsername
  keycloakAdminPassword: vault:staging/auth/keycloak:adminPassword
  keycloakAdminUsername: vault:staging/auth/keycloak:adminUsername
  postgresAdminPassword: vault:staging/auth/postgres:adminPassword
  postgresAdminUsername: vault:staging/auth/postgres:adminUsername
  postgresql-ha:
    global:
      pgpool:
        adminPassword: vault:staging/auth/postgres:pgpoolAdminPassword
        adminUsername: vault:staging/auth/postgres:pgpoolAdminUsername
      postgresql:
        database: keycloak
        password: vault:staging/auth/postgres:adminPassword
        repmgrPassword: vault:staging/auth/postgres:repmgrPassword
        repmgrUsername: vault:staging/auth/postgres:repmgrUsername
        username: vault:staging/auth/postgres:adminUsername
    postgresql:
      replicaCount: 1
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
demo-app:
  keycloak:
    redirectUris:
      allowAll: false
      domain: cloudnativeentrepreneur.dev
      includeNamespace: true
      serviceName: demo-app
domain: cloudnativeentrepreneur.dev
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --v
  - 4
  config:
    domain: cloudnativeentrepreneur.dev
    exposer: Ingress
    http: "false"
    tlsSecretName: tls-cloudnativeentrepreneur-dev-p
    tlsacme: "true"
    urltemplate: '{{.Service}}-{{.Namespace}}.{{.Domain}}'
  production: true
jenkins:
  Servers:
    Global: {}
keycloak-controller:
  enabled: false
prow: {}
